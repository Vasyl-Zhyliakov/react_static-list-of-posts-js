{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SAAoCD,QCT3BG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,OAAS,EACjBD,EAASE,KAAI,SAAAT,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,OAG9C,mBAAG,UAAQ,oBAAX,gCCROC,G,MAAW,SAAC,GAAD,QAAGC,KAAQV,EAAX,EAAWA,MAAOD,EAAlB,EAAkBA,KAAlB,OACtB,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCAQY,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOZ,EAAlB,EAAkBA,KAAMS,EAAxB,EAAwBA,KAAML,EAA9B,EAA8BA,SAA9B,OACtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAEAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGR,UAAU,iBAAb,SAA+BD,IAE/B,cAAC,EAAD,CAAaI,SAAUA,QChBdS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCU/B,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAVmBO,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAAW,MAU3DZ,UAPuBG,EAOGI,EAAKJ,GANxBY,EAAmBC,QAAO,SAAAvB,GAAO,OAAIA,EAAQwB,SAAWd,QADjE,IAAyBA,EAJJS,KAcRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c41948ab.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{body}</div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length > 0 ? (\n      comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n    ) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { email, name } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: { title, body, user, comments } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        {user && <UserInfo user={user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n\n    <CommentList comments={comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentsById(id) {\n  return commentsFromServer.filter(comment => comment.postId === id);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}